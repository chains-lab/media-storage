/*
Title

Title

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExitSizeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExitSizeInner{}

// ExitSizeInner struct for ExitSizeInner
type ExitSizeInner struct {
	// exit name
	Exit string `json:"exit"`
	// exit size
	Size int64 `json:"size"`
}

type _ExitSizeInner ExitSizeInner

// NewExitSizeInner instantiates a new ExitSizeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExitSizeInner(exit string, size int64) *ExitSizeInner {
	this := ExitSizeInner{}
	this.Exit = exit
	this.Size = size
	return &this
}

// NewExitSizeInnerWithDefaults instantiates a new ExitSizeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExitSizeInnerWithDefaults() *ExitSizeInner {
	this := ExitSizeInner{}
	return &this
}

// GetExit returns the Exit field value
func (o *ExitSizeInner) GetExit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exit
}

// GetExitOk returns a tuple with the Exit field value
// and a boolean to check if the value has been set.
func (o *ExitSizeInner) GetExitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exit, true
}

// SetExit sets field value
func (o *ExitSizeInner) SetExit(v string) {
	o.Exit = v
}

// GetSize returns the Size field value
func (o *ExitSizeInner) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ExitSizeInner) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ExitSizeInner) SetSize(v int64) {
	o.Size = v
}

func (o ExitSizeInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExitSizeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["exit"] = o.Exit
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *ExitSizeInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"exit",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExitSizeInner := _ExitSizeInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExitSizeInner)

	if err != nil {
		return err
	}

	*o = ExitSizeInner(varExitSizeInner)

	return err
}

type NullableExitSizeInner struct {
	value *ExitSizeInner
	isSet bool
}

func (v NullableExitSizeInner) Get() *ExitSizeInner {
	return v.value
}

func (v *NullableExitSizeInner) Set(val *ExitSizeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableExitSizeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableExitSizeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExitSizeInner(val *ExitSizeInner) *NullableExitSizeInner {
	return &NullableExitSizeInner{value: val, isSet: true}
}

func (v NullableExitSizeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExitSizeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


